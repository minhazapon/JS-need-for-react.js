/**
 * JavaScript-‡¶è Axios ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá API ‡¶ï‡¶≤ ‡¶ï‡¶∞‡¶æ ‡¶Ö‡¶®‡ßá‡¶ï ‡¶∏‡¶π‡¶ú ‡¶è‡¶¨‡¶Ç ‡¶∏‡ßÅ‡¶¨‡¶ø‡¶ß‡¶æ‡¶ú‡¶®‡¶ï‡•§ ‡¶è‡¶ü‡¶ø Promise-based HTTP client, ‡¶Ø‡¶æ GET, POST, PUT, DELETE ‡¶á‡¶§‡ßç‡¶Ø‡¶æ‡¶¶‡¶ø HTTP request ‡¶∏‡¶π‡¶ú‡ßá ‡¶™‡¶∞‡¶ø‡¶ö‡¶æ‡¶≤‡¶®‡¶æ ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶æ‡¶π‡¶æ‡¶Ø‡ßç‡¶Ø ‡¶ï‡¶∞‡ßá‡•§

Axios ‡¶á‡¶®‡ßç‡¶∏‡¶ü‡¶≤‡ßá‡¶∂‡¶®
Axios ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶§‡ßá ‡¶π‡¶≤‡ßá ‡¶Ü‡¶ó‡ßá ‡¶è‡¶ü‡¶ø ‡¶á‡¶®‡ßç‡¶∏‡¶ü‡¶≤ ‡¶ï‡¶∞‡¶§‡ßá ‡¶π‡¶¨‡ßá:

1. npm ‡¶¶‡¶ø‡ßü‡ßá ‡¶á‡¶®‡¶∏‡ßç‡¶ü‡¶≤ (Node.js project)
sh
Copy
Edit
npm install axios
2. CDN ‡¶¶‡¶ø‡ßü‡ßá ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ (HTML ‡¶´‡¶æ‡¶á‡¶≤‡ßá)
html
Copy
Edit
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
Axios ‡¶¶‡¶ø‡ßü‡ßá API ‡¶ï‡¶≤‡ßá‡¶∞ ‡¶¨‡¶ø‡¶≠‡¶ø‡¶®‡ßç‡¶® ‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£
1. GET Request (‡¶°‡¶æ‡¶ü‡¶æ ‡¶®‡ßá‡¶ì‡ßü‡¶æ)
js
Copy
Edit
axios.get('https://jsonplaceholder.typicode.com/posts/1')
  .then(response => {
    console.log(response.data);
  })
  .catch(error => {
    console.error('Error fetching data:', error);
  });
2. POST Request (‡¶°‡¶æ‡¶ü‡¶æ ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã)
js
Copy
Edit
axios.post('https://jsonplaceholder.typicode.com/posts', {
    title: 'New Post',
    body: 'This is the post content',
    userId: 1
  })
  .then(response => {
    console.log('Post Created:', response.data);
  })
  .catch(error => {
    console.error('Error creating post:', error);
  });
3. PUT Request (‡¶°‡¶æ‡¶ü‡¶æ ‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶ï‡¶∞‡¶æ)
js
Copy
Edit
axios.put('https://jsonplaceholder.typicode.com/posts/1', {
    title: 'Updated Post',
    body: 'Updated content',
    userId: 1
  })
  .then(response => {
    console.log('Post Updated:', response.data);
  })
  .catch(error => {
    console.error('Error updating post:', error);
  });
4. DELETE Request (‡¶°‡¶æ‡¶ü‡¶æ ‡¶°‡¶ø‡¶≤‡¶ø‡¶ü ‡¶ï‡¶∞‡¶æ)
js
Copy
Edit
axios.delete('https://jsonplaceholder.typicode.com/posts/1')
  .then(response => {
    console.log('Post Deleted:', response.data);
  })
  .catch(error => {
    console.error('Error deleting post:', error);
  });
5. Async/Await ‡¶¶‡¶ø‡ßü‡ßá API ‡¶ï‡¶≤
js
Copy
Edit
async function fetchData() {
  try {
    const response = await axios.get('https://jsonplaceholder.typicode.com/posts/1');
    console.log(response.data);
  } catch (error) {
    console.error('Error fetching data:', error);
  }
}
fetchData();
6. Multiple API Call (‡¶è‡¶ï‡¶∏‡¶æ‡¶•‡ßá ‡¶è‡¶ï‡¶æ‡¶ß‡¶ø‡¶ï API ‡¶ï‡¶≤)
js
Copy
Edit
axios.all([
  axios.get('https://jsonplaceholder.typicode.com/posts/1'),
  axios.get('https://jsonplaceholder.typicode.com/users/1')
])
.then(axios.spread((post, user) => {
  console.log('Post:', post.data);
  console.log('User:', user.data);
}))
.catch(error => {
  console.error('Error fetching data:', error);
});
Axios ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶≤‡ßá ‡¶ï‡ßá‡¶® ‡¶≠‡¶æ‡¶≤‡ßã?
‚úÖ Promise-based (async/await ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡ßü)
‚úÖ Automatic JSON data handling
‚úÖ Error handling ‡¶∏‡¶π‡¶ú
‚úÖ Request & Response Interceptor ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡ßü
‚úÖ Cancel request ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡ßü

‡¶è‡¶ñ‡¶® ‡¶Ü‡¶™‡¶®‡¶ø Axios ‡¶¶‡¶ø‡ßü‡ßá API ‡¶ï‡¶≤ ‡¶ï‡¶∞‡ßá ‡¶∏‡¶π‡¶ú‡ßá ‡¶°‡¶æ‡¶ü‡¶æ ‡¶≤‡ßã‡¶°, ‡¶∏‡ßá‡¶®‡ßç‡¶°, ‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶¨‡¶æ ‡¶°‡¶ø‡¶≤‡¶ø‡¶ü ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶¨‡ßá‡¶®‡•§ üöÄ
 */

const { default: axios } = require("axios")

axios.get('https://jsonplaceholder.typicode.com/posts')
    .then(res => {

        console.log(res.data)

    })
    .catch(error => {

        console.log(error)

    })

//Async/Await ‡¶¶‡¶ø‡ßü‡ßá API ‡¶ï‡¶≤

async function fetchData() {

    try {

        const allData = await axios.get('https://jsonplaceholder.typicode.com/posts')

        console.log(allData)

    } catch (error) {

        console.log(error)

    }

}

fetchData()
